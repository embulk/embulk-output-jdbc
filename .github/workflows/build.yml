name: Build and test
on: push
jobs:
  db2:  # https://hub.docker.com/r/ibmcom/db2
    runs-on: ubuntu-latest
    services:
      db2:
        # To run local:
        # docker run -it --privileged=true --name db2container -p 50000:50000 -p 55000:55000 -e LICENSE=accept -e DB2INSTANCE=db2inst1 -e DB2INST1_PASSWORD=password -e DBNAME=testdb -e SAMPLEDB=true ibmcom/db2:11.5.0.0a
        image: docker://ibmcom/db2:11.5.0.0a
        options: --name "db2container" --privileged=true --health-cmd "su - db2inst1 -c \"db2 GET DBM CFG\"" --health-interval 20s --health-timeout 30s --health-retries 128
        ports:
          - "50000:50000"
          - "55000:55000"
        env:
          LICENSE: accept
          DB2INSTANCE: db2inst1
          DB2INST1_PASSWORD: password
          DBNAME: testdb
          SAMPLEDB: true
    steps:
      - uses: actions/checkout@v2
      # TODO: Find a better way to wait for completing setup.
      - name: Sleep for 3 minutes to complete all the DB2 setup process
        run: sleep 180
      - name: List Docker containers
        run: docker ps -a
      - name: Show Docker logs
        run: docker logs db2container
      - name: Show DB2 configs
        run: docker exec db2container su - db2inst1 -c "db2 \"GET DBM CFG\""
      - name: Build with testing
        run: ./gradlew --stacktrace :embulk-output-db2:check
        env:
          _JAVA_OPTIONS: "-Xmx2048m -Xms512m"
          EMBULK_OUTPUT_DB2_TEST_CONFIG: "${{ github.workspace }}/ci/db2.yml"
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: db2
          path: embulk-output-db2/build/reports/tests/test
  mysql:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: ci
          MYSQL_PASSWORD: password
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          java-version: 1.8
          distribution: 'zulu'
      - name: Connect
        run: mysql -h 127.0.0.1 --port 3306 -uroot -proot -e "show databases;"
      - name: Create database
        run: mysql -h 127.0.0.1 --port 3306 -uroot -proot -e "create database ci_test;"
      - name: Build with testing
        run: ./gradlew --stacktrace :embulk-output-mysql:check
        env:
          _JAVA_OPTIONS: "-Xmx2048m -Xms512m"
          EMBULK_OUTPUT_MYSQL_TEST_CONFIG: "${{ github.workspace }}/ci/mysql.yml"
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: mysql
          path: embulk-output-mysql/build/reports/tests/test
  oracle:  # https://hub.docker.com/_/oracle-database-enterprise-edition
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test for Oracle Database does not run on GitHub Actions.
        run: echo "Test for Oracle Database does not run on GitHub Actions."
  postgresql:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.4
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v2
      - name: Connect
        run: psql -h 127.0.0.1 -p 5432 -U postgres -d postgres -c "\l"
        env:
          PGPASSWORD: postgres
      - name: Create database
        run: psql -h 127.0.0.1 -p 5432 -U postgres -d postgres -c "create database ci_test;"
        env:
          PGPASSWORD: postgres
      - name: Build with testing
        run: ./gradlew --stacktrace :embulk-output-postgresql:check
        env:
          _JAVA_OPTIONS: "-Xmx2048m -Xms512m"
          EMBULK_OUTPUT_POSTGRESQL_TEST_CONFIG: "${{ github.workspace }}/ci/postgresql.yml"
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: postgresql
          path: embulk-output-postgresql/build/reports/tests/test
  redshift:
    runs-on: ubuntu-latest
    # Testing embulk-output-redshift emulated with PostgreSQL.
    services:
      postgres:
        image: postgres:9.4
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - "5439:5432"
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v2
      - name: Connect
        run: psql -h 127.0.0.1 -p 5439 -U postgres -d postgres -c "\l"
        env:
          PGPASSWORD: postgres
      - name: Create database
        run: psql -h 127.0.0.1 -p 5439 -U postgres -d postgres -c "create database ci_test;"
        env:
          PGPASSWORD: postgres
      - name: Build with testing
        run: ./gradlew --stacktrace :embulk-output-redshift:check
        env:
          _JAVA_OPTIONS: "-Xmx2048m -Xms512m"
          EMBULK_OUTPUT_REDSHIFT_TEST_CONFIG: "${{ github.workspace }}/ci/redshift.yml"
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: redshift
          path: embulk-output-redshift/build/reports/tests/test
          if-no-files-found: ignore
